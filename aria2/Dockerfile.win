FROM ubuntu:latest

ENV HOST x86_64-w64-mingw32
ENV PREFIX /opt/aria2
ENV PKG_CONFIG_PATH $PREFIX/lib/pkgconfig/
ENV LD_LIBRARY_PATH $PREFIX/lib/
ENV CC="${HOST}-gcc"
ENV CXX="${HOST}-g++"
ENV AR="${HOST}-ar"
ENV LD="${HOST}-ld"
ENV RANLIB="${HOST}-ranlib"
ENV STRIP="${HOST}-strip"
ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update && \
    apt-get install -y git curl ca-certificates build-essential binutils autoconf automake autopoint autotools-dev libtool pkg-config libcppunit-dev

RUN curl -L "https://musl.cc/${HOST}-cross.tgz" -o musl-cross.tgz && \
    curl -L "https://curl.se/ca/cacert.pem" -o /opt/cacert.pem && \
    curl -L "https://github.com/zlib-ng/zlib-ng/archive/refs/tags/2.0.6.tar.gz" -o zlib-ng.tar.gz && \
    curl -L "https://github.com/libexpat/libexpat/releases/download/R_2_4_6/expat-2.4.6.tar.gz" -o expat.tar.gz && \
    curl -L "https://github.com/c-ares/c-ares/releases/download/cares-1_18_1/c-ares-1.18.1.tar.gz" -o c-ares.tar.gz && \
    curl -L "https://www.openssl.org/source/openssl-3.0.1.tar.gz" -o openssl.tar.gz && \
    curl -L "https://www.sqlite.org/2022/sqlite-autoconf-3380000.tar.gz" -o sqlite.tar.gz && \
    curl -L "https://github.com/libssh2/libssh2/releases/download/libssh2-1.10.0/libssh2-1.10.0.tar.gz" -o libssh2.tar.gz

RUN tar -zxf musl-cross.tgz -C musl-cross && \
    mv musl-cross /opt/${HOST}-musl-cross && \
    export PATH=$PATH:/opt/${HOST}-musl-cross/bin

RUN tar -zxf zlib-ng.tar.gz -C zlib-ng && \
    cd zlib-ng && \
    ./configure --prefix=$PREFIX --static --zlib-compat && \
    make && make install

RUN tar -zxf expat.tar.gz -C expat && \
    cd expat && \
    ./configure --prefix=$PREFIX --host=${HOST} --disable-shared --enable-static && \
    make && make install

RUN tar -zxf c-ares.tar.gz -C c-ares && \
    cd c-ares && \
    ./configure --prefix=$PREFIX --host=${HOST} --disable-shared --enable-static && \
    make && make install

RUN tar -zxf openssl.tar.gz -C openssl && \
    cd openssl && \
    ./Configure --cross-compile-prefix=${HOST}- --prefix=$PREFIX mingw64 && \
    make && make install

RUN tar -zxf sqlite.tar.gz -C sqlite && \
    cd sqlite && \
    ./configure --prefix=$PREFIX --host=${HOST} --disable-shared --enable-static && \
    make && make install

RUN tar -zxf libssh2.tar.gz -C libssh2 && \
    cd libssh2 && \
    ./configure --prefix=$PREFIX --host=${HOST} --disable-shared --enable-static && \
    make && make install

RUN git clone https://github.com/aria2/aria2.git && \
    cd aria2 && \
    sed -i "s|\"5\", 1, -1, 'j'|\"16\", 1, -1, 'j'|g" ./src/OptionHandlerFactory.cc && \
    sed -i "s|\"1\", 1, 16, 'x'|\"16\", 1, -1, 'x'|g" ./src/OptionHandlerFactory.cc && \
    sed -i 's|MIN_SPLIT_SIZE, "20M", 1_m, 1_g|MIN_SPLIT_SIZE, "1M", 1_k, 1_g|g' ./src/OptionHandlerFactory.cc && \
    sed -i 's|CONNECT_TIMEOUT, "60", 1, 600|CONNECT_TIMEOUT, "30", 1, 600|g' ./src/OptionHandlerFactory.cc && \
    sed -i 's|PIECE_LENGTH, "1M", 1_m, 1_g|PIECE_LENGTH, "1M", 1_k, 1_g|g' ./src/OptionHandlerFactory.cc && \
    sed -i 's|RETRY_WAIT, "0", 0, 600|RETRY_WAIT, "1", 0, 600|g' ./src/OptionHandlerFactory.cc && \
    sed -i 's|SPLIT, "5", 1, -1|SPLIT, "128", 1, -1|g' ./src/OptionHandlerFactory.cc && \
    autoreconf -i && \
    ./configure \
        --host=$HOST \
        --prefix=$PREFIX \
        --without-gnutls \
        --without-libgmp \
        --without-libxml2 \
        --without-libgcrypt \
        --without-libnettle \
        --with-openssl \
        --with-libz \
        --with-libexpat \
        --with-libssh2 \
        --with-sqlite3 \
        --with-ca-bundle='/opt/cacert.pem' \
        ARIA2_STATIC=yes && \
    make && \
    strip src/aria2c.exe